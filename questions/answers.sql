-- Part 2a, Question 1

with successful_orders as (
	-- creating a CTE which contains only successful checkouts from the events table.
	-- columns included are customer_id present in both events and orders tables as specified by INNER JOIN, and order_id from orders table
	SELECT e.customer_id, o.order_id 
	FROM alt_school.events e inner join alt_school.orders o using (customer_id) 
	WHERE e.event_data ->> 'status' = 'success'
) 

-- main query using the successful_orders CTE defined above, the line_items and products tables
SELECT
	-- product_id column is of type bigint and not UUID as stated in question description. this was pulled from the item_id in line_items table which is a foreign key from the products table
	-- product_name column is generated by using a subquery to include the product name from the products table
	-- num_times_in_successful_orders is generated by counting the number of times an item is found in an order from the orders table
	li.item_id as product_id,
	(select p.name from alt_school.products p where p.id = li.item_id) as product_name,
	count(li.item_id) as num_times_in_successful_orders
FROM successful_orders s inner join alt_school.line_items li using (order_id) 
group by li.item_id
order by num_times_in_successful_orders desc -- organize query results from most to least ordered items
limit 1; -- this ensures that the query returns only the most ordered item